{"version":3,"file":"index.es.js","sources":["../src/ConnectionBanner/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RimbleUtils from \"rimble-utils\";\nimport { Box, Flex, Icon, Text, MetaMaskButton } from \"rimble-ui\";\n\nconst bannerStyle = {\n  position: \"fixed\",\n  bottom: 0,\n  left: 0,\n  right: 0,\n  width: \"100%\",\n  backgroundColor: \"white\"\n};\n\nconst WrongNetwork = ({ currentNetwork, requiredNetwork }) => {\n  return (\n    <Box style={bannerStyle} p={3}>\n      <Flex alignItems={\"center\"}>\n        <Box p={4}>\n          <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n        </Box>\n        <Flex flexDirection={\"column\"}>\n          <Text fontWeight={\"bold\"}>\n            Switch to the {RimbleUtils.getEthNetworkNameById(requiredNetwork)}{\" \"}\n            Ethereum network in MetaMask\n          </Text>\n          <Text>\n            Change your network in your MetaMask extension. You're currently on{\" \"}\n            {RimbleUtils.getEthNetworkNameById(currentNetwork)}\n          </Text>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nconst NoNetwork = () => {\n  return (\n    <Box style={bannerStyle} p={3}>\n      <Flex alignItems={\"center\"} justifyContent={\"space-between\"}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Install MetaMask to use our blockchain features\n            </Text>\n            <Text>\n              This will let you connect using an Ethereum public address\n            </Text>\n          </Flex>\n        </Flex>\n        <MetaMaskButton>Install MetaMask</MetaMaskButton>\n      </Flex>\n    </Box>\n  );\n};\n\nconst NotWeb3Browser = () => {\n  return (\n    <Box style={bannerStyle} p={3}>\n      <Flex alignItems={\"center\"}>\n        <Box p={4}>\n          <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n        </Box>\n        <Flex flexDirection={\"column\"}>\n          <Text fontWeight={\"bold\"}>\n            Your browser doesn't support our blockchain features\n          </Text>\n          <Text>\n            Switch to either Brave, FireFox, Opera, or Chrome to continue\n          </Text>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nclass ConnectionBanner extends Component {\n  static propTypes = {\n    currentNetwork: PropTypes.number,\n    requiredNetwork: PropTypes.number,\n    onWeb3Fallback: PropTypes.bool\n  };\n\n  state = {\n    isCorrectNetwork: null\n  };\n\n  checkCorrectNetwork = () => {\n    const isCorrectNetwork =\n      this.props.currentNetwork === this.props.requiredNetwork;\n    if (isCorrectNetwork !== this.state.isCorrectNetwork) {\n      this.setState({ isCorrectNetwork });\n    }\n  };\n\n  componentDidMount() {\n    const browserIsWeb3Capable = RimbleUtils.browserIsWeb3Capable();\n    this.setState({ browserIsWeb3Capable });\n  }\n\n  componentDidUpdate() {\n    if (\n      this.props.currentNetwork &&\n      this.props.requiredNetwork &&\n      this.state.isCorrectNetwork === null\n    ) {\n      this.checkCorrectNetwork();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.isCorrectNetwork === false ? (\n          <WrongNetwork\n            currentNetwork={this.props.currentNetwork}\n            requiredNetwork={this.props.requiredNetwork}\n          />\n        ) : this.state.browserIsWeb3Capable === false ? (\n          <NotWeb3Browser />\n        ) : this.props.onWeb3Fallback === true ||\n          this.props.currentNetwork === null ? (\n          <NoNetwork />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ConnectionBanner;\n"],"names":["bannerStyle","WrongNetwork","currentNetwork","requiredNetwork","getEthNetworkNameById","NoNetwork","NotWeb3Browser","ConnectionBanner","state","checkCorrectNetwork","isCorrectNetwork","props","setState","browserIsWeb3Capable","RimbleUtils","onWeb3Fallback","Component","propTypes","PropTypes","number","bool"],"mappings":";;;;;;;;;;;;;AAKA,IAAMA,cAAc;YACR,OADQ;UAEV,CAFU;QAGZ,CAHY;SAIX,CAJW;SAKX,MALW;mBAMD;CANnB;;AASA,IAAMC,eAAe,SAAfA,YAAe,OAAyC;MAAtCC,cAAsC,QAAtCA,cAAsC;MAAtBC,eAAsB,QAAtBA,eAAsB;;SAE1D;OAAA;MAAK,OAAOH,WAAZ,EAAyB,GAAG,CAA5B;;UACE;QAAM,YAAY,QAAlB;;WACE;UAAK,GAAG,CAAR;4BACG,IAAD,IAAM,MAAK,SAAX,EAAqB,OAAM,MAA3B,EAAkC,MAAK,IAAvC;OAFJ;;YAIE;UAAM,eAAe,QAArB;;cACE;YAAM,YAAY,MAAlB;;sBAC6BI,qBAAZ,CAAkCD,eAAlC,CADjB;aAAA;;SADF;;cAKE;;;aAAA;sBAEeC,qBAAZ,CAAkCF,cAAlC;;;;GAbX;CADF;;AAsBA,IAAMG,YAAY,SAAZA,SAAY,GAAM;SAEpB;OAAA;MAAK,OAAOL,WAAZ,EAAyB,GAAG,CAA5B;;UACE;QAAM,YAAY,QAAlB,EAA4B,gBAAgB,eAA5C;;YACE;UAAM,YAAY,QAAlB;;aACE;YAAK,GAAG,CAAR;8BACG,IAAD,IAAM,MAAK,SAAX,EAAqB,OAAM,MAA3B,EAAkC,MAAK,IAAvC;SAFJ;;cAIE;YAAM,eAAe,QAArB;;gBACE;cAAM,YAAY,MAAlB;;WADF;;gBAIE;;;;;OATN;;sBAcE;;;;;GAhBN;CADF;;AAuBA,IAAMM,iBAAiB,SAAjBA,cAAiB,GAAM;SAEzB;OAAA;MAAK,OAAON,WAAZ,EAAyB,GAAG,CAA5B;;UACE;QAAM,YAAY,QAAlB;;WACE;UAAK,GAAG,CAAR;4BACG,IAAD,IAAM,MAAK,SAAX,EAAqB,OAAM,MAA3B,EAAkC,MAAK,IAAvC;OAFJ;;YAIE;UAAM,eAAe,QAArB;;cACE;YAAM,YAAY,MAAlB;;SADF;;cAIE;;;;;;GAVR;CADF;;IAoBMO;;;;;;;;;;;;;;4MAOJC,QAAQ;wBACY;aAGpBC,sBAAsB,YAAM;UACpBC,mBACJ,MAAKC,KAAL,CAAWT,cAAX,KAA8B,MAAKS,KAAL,CAAWR,eAD3C;UAEIO,qBAAqB,MAAKF,KAAL,CAAWE,gBAApC,EAAsD;cAC/CE,QAAL,CAAc,EAAEF,kCAAF,EAAd;;;;;;;wCAIgB;UACZG,uBAAuBC,YAAYD,oBAAZ,EAA7B;WACKD,QAAL,CAAc,EAAEC,0CAAF,EAAd;;;;yCAGmB;UAEjB,KAAKF,KAAL,CAAWT,cAAX,IACA,KAAKS,KAAL,CAAWR,eADX,IAEA,KAAKK,KAAL,CAAWE,gBAAX,KAAgC,IAHlC,EAIE;aACKD,mBAAL;;;;;6BAIK;aAEL;;;aACQD,KAAL,CAAWE,gBAAX,KAAgC,KAAhC,GACC,oBAAC,YAAD;0BACkB,KAAKC,KAAL,CAAWT,cAD7B;2BAEmB,KAAKS,KAAL,CAAWR;UAH/B,GAKG,KAAKK,KAAL,CAAWK,oBAAX,KAAoC,KAApC,GACF,oBAAC,cAAD,OADE,GAEA,KAAKF,KAAL,CAAWI,cAAX,KAA8B,IAA9B,IACF,KAAKJ,KAAL,CAAWT,cAAX,KAA8B,IAD5B,GAEF,oBAAC,SAAD,OAFE,GAGA;OAZR;;;;;EAnC2Bc;;AAAzBT,iBACGU,YAAY;kBACDC,UAAUC,MADT;mBAEAD,UAAUC,MAFV;kBAGDD,UAAUE;;;;;"}